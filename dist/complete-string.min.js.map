{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///complete-string.min.js","webpack:///webpack/bootstrap ff9c30f3adb5c92d0d7c?33ff","webpack:///./index.js?1d7d","webpack:///./src/index.js?b436"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","assert","cond","message","Error","CompleteString","withChar","string","length","char","String","Number","diff","complement","Array","join","withZero"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,eAAAD,IAEAD,EAAA,eAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAASL,EAAQD,EAASM,GEtDhC,YAEAL,GAAAD,QAAAM,EAAA,IF6DM,SAASL,EAAQD;;;;;;;;;;;;AGlDvB,YAQA,SAAAe,GAAAC,EAAAC,GACA,IAAAD,EACA,SAAAE,OAAAD,GASA,GAAAE,IAYAC,SAAA,SAAAC,EAAAC,EAAAC,GAMA,GAJAF,EAAAG,OAAAH,GACAC,EAAAG,OAAAH,GACAC,EAAAC,OAAAD,GAEAF,EAAAC,SACA,MAAAD,EAGAN,GAAA,IAAAQ,EAAAD,OAAA,6CAEA,IAAAI,GAAAJ,EAAAD,EAAAC,OACAK,EAAA,GAAAC,OAAAF,EAAA,GAAAG,KAAAN,EAEA,OAAAI,GAAAN,GAUAS,SAAA,SAAAT,EAAAC,GACA,MAAAlB,MAAAgB,SAAAC,EAAAC,EAAA,MAKArB,GAAAD,QAAAmB","file":"complete-string.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CompleteString\"] = factory();\n\telse\n\t\troot[\"CompleteString\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CompleteString\"] = factory();\n\telse\n\t\troot[\"CompleteString\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/**\n\t * @author Piotr Kowalski <piecioshka@gmail.com> (piecioshka.pl)\n\t * @name complete-string\n\t * @description CompleteString string by any char. This repo is some kind of polyfill for ES7 padLeft.\n\t * @version 2.1.2\n\t * @license MIT\n\t * @example\n\t * CompleteString.withChar(' batman', 10, 'a') // => 'aaa batman'\n\t * @example\n\t * var date = new Date();\n\t * CompleteString.withZero(date.getMonth(), 2) // => '05'\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Check truly value. Otherwise throws error.\n\t *\n\t * @param {boolean} cond\n\t * @param {string} message\n\t */\n\tfunction assert(cond, message) {\n\t    if (!cond) {\n\t        throw new Error(message);\n\t    }\n\t}\n\t\n\t/**\n\t * Main module.\n\t *\n\t * @type {{withChar: Function, withZero: Function}}\n\t */\n\tvar CompleteString = {\n\t\n\t    /**\n\t     * Method which add `appender` sign to `chars` that, result length of returns string is length passed by `length`.\n\t     *\n\t     * @param {string|number} string\n\t     * @param {number} length\n\t     * @param {string|number} char\n\t     * @returns {string}\n\t     *\n\t     * @throw When `appender` is not a single char.\n\t     */\n\t    withChar: function (string, length, char) {\n\t        // Cast to strings.\n\t        string = String(string);\n\t        length = Number(length);\n\t        char = String(char);\n\t\n\t        if (string.length > length) {\n\t            return string;\n\t        }\n\t\n\t        assert(char.length === 1, 'CompleteString: char is not a single char.');\n\t\n\t        var diff = (length - string.length);\n\t        var complement = (new Array(diff + 1)).join(char);\n\t\n\t        return complement + string;\n\t    },\n\t\n\t    /**\n\t     * Append chars passed in first param with `0` char.\n\t     *\n\t     * @param {string|number} string\n\t     * @param {number} length\n\t     * @returns {string}\n\t     */\n\t    withZero: function (string, length) {\n\t        return this.withChar(string, length, '0');\n\t    }\n\t\n\t};\n\t\n\tmodule.exports = CompleteString;\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** complete-string.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ff9c30f3adb5c92d0d7c\n **/","'use strict';\n\nmodule.exports = require('./src/index');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.js\n ** module id = 0\n ** module chunks = 0 1\n **/","/**\n * @author Piotr Kowalski <piecioshka@gmail.com> (piecioshka.pl)\n * @name complete-string\n * @description CompleteString string by any char. This repo is some kind of polyfill for ES7 padLeft.\n * @version 2.1.2\n * @license MIT\n * @example\n * CompleteString.withChar(' batman', 10, 'a') // => 'aaa batman'\n * @example\n * var date = new Date();\n * CompleteString.withZero(date.getMonth(), 2) // => '05'\n */\n\n'use strict';\n\n/**\n * Check truly value. Otherwise throws error.\n *\n * @param {boolean} cond\n * @param {string} message\n */\nfunction assert(cond, message) {\n    if (!cond) {\n        throw new Error(message);\n    }\n}\n\n/**\n * Main module.\n *\n * @type {{withChar: Function, withZero: Function}}\n */\nvar CompleteString = {\n\n    /**\n     * Method which add `appender` sign to `chars` that, result length of returns string is length passed by `length`.\n     *\n     * @param {string|number} string\n     * @param {number} length\n     * @param {string|number} char\n     * @returns {string}\n     *\n     * @throw When `appender` is not a single char.\n     */\n    withChar: function (string, length, char) {\n        // Cast to strings.\n        string = String(string);\n        length = Number(length);\n        char = String(char);\n\n        if (string.length > length) {\n            return string;\n        }\n\n        assert(char.length === 1, 'CompleteString: char is not a single char.');\n\n        var diff = (length - string.length);\n        var complement = (new Array(diff + 1)).join(char);\n\n        return complement + string;\n    },\n\n    /**\n     * Append chars passed in first param with `0` char.\n     *\n     * @param {string|number} string\n     * @param {number} length\n     * @returns {string}\n     */\n    withZero: function (string, length) {\n        return this.withChar(string, length, '0');\n    }\n\n};\n\nmodule.exports = CompleteString;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/index.js\n ** module id = 1\n ** module chunks = 0 1\n **/"],"sourceRoot":""}