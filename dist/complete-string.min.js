!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.CompleteString=e():t.CompleteString=e()}(this,function(){return function(t){function e(n){if(r[n])return r[n].exports;var o=r[n]={exports:{},id:n,loaded:!1};return t[n].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var r={};return e.m=t,e.c=r,e.p="",e(0)}([function(t,e,r){"use strict";t.exports=r(1)},function(t,e){/**
	 * @author Piotr Kowalski <piecioshka@gmail.com> (piecioshka.pl)
	 * @name complete-string
	 * @description CompleteString string by any char. This repo is some kind of polyfill for ES7 padLeft.
	 * @version 2.1.0
	 * @license MIT
	 * @example
	 * CompleteString.withChar(' batman', 10, 'a') // => 'aaa batman'
	 * @example
	 * var date = new Date();
	 * CompleteString.withZero(date.getMonth(), 2) // => '05'
	 */
"use strict";function r(t,e){if(!t)throw new Error(e)}var n={withChar:function(t,e,n){if(t=String(t),e=Number(e),n=String(n),t.length>e)return t;r(1===n.length,"CompleteString: char is not a single char.");var o=e-t.length,i=new Array(o+1).join(n);return i+t},withZero:function(t,e){return this.withChar(t,e,"0")}};t.exports=n}])});
//# sourceMappingURL=complete-string.min.js.map